{"version":3,"sources":["Components/Modal.jsx","Components/Navbar.jsx","Components/Footer.jsx","Components/Disclaimer/Disclaimer.jsx","Components/Disclaimer/General.js","Components/Disclaimer/Medical.js","Components/About/AboutText.js","Components/About/About.jsx","Components/Welcome.jsx","Components/Introduction.jsx","Components/LocationForm/DropdownStateUSA.jsx","Components/LocationForm/LocationForm.jsx","Components/Assessment/AssessmentAdvisory.jsx","Components/LineGraph.jsx","Components/Assessment/AssessmentMoreInfo.jsx","Components/Assessment/Assessment.jsx","Components/Cases.jsx","Components/Loading.jsx","aggregate.js","Population.js","Components/MainPage.jsx","App.js","index.js","Images/Cafes.png"],"names":["CustomModal","show","title","body","onAccept","onCancel","showModal","setShowModal","useState","accepted","setAccepted","Modal","backdrop","keyboard","centered","onHide","onExited","Header","style","display","justifyContent","alignItems","closeButton","Title","Body","Footer","Button","variant","onClick","NavbarReactive","Navbar","sticky","collapseOnSelect","expand","bg","Brand","href","process","Toggle","aria-controls","Collapse","id","Nav","className","Link","rel","target","Container","fluid","Row","Date","getFullYear","Disclaimer","AboutText","window","About","Welcome","Introduction","states","AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","MA","ME","MD","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","DropdownStateUSA","stateUSA","onStateChange","displayStateUSA","Dropdown","onSelect","e","drop","Menu","flip","Object","keys","map","abbreviation","Item","key","eventKey","standardizeCounty","county","words","trim","split","length","toLowerCase","lastIndex","lastIndexOf","substring","charAt","toUpperCase","slice","disclaimerText","LocationForm","onCountyChange","initialValue","value","setValue","reset","bind","onChange","event","useInput","bindCounty","modalShow","setModalShow","handleAcceptModal","useCallback","standardCounty","onSubmit","preventDefault","autoFocus","type","placeholder","disabled","AssessmentAdvisory","props","assessment","getColor","assessmentNum","Number","getRiskCategory","whiteText","assignedRisk","risk","lowest","lower","moderate","higher","highest","color","backgroundColor","flex","LineGraph","data","keyName","lineNames","viewRef","paddingTop","ref","height","horizontal","vertical","dataKey","name","ContextAwareToggle","children","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","scrollToAccordion","current","scrollIntoView","block","inline","behavior","Accordion","func","setTimeout","as","Card","calcNewDailyStat","lastTwoWeeks","dailyChange","firstDayBootstrap","shift","i","day","yesterday","push","date","Math","max","AssessmentMoreInfo","React","useRef","lastTwoWeeksShift","twoWeeksDeaths","deaths","twoWeeksNewCases","twoWeeksNewDeaths","computeAverage","dataSet","fips","population","newCasesByDay","casesBaseLine","cases","deathsBaseLine","deltaCasesToday","deltaDeathsToday","deathsAndRecoveries","estimateRecoveries","reduce","a","b","Assessment","graphData","setAssessment","setLastTwoWeeks","useEffect","average","round","workingSet","unshift","Cases","aggregation","location","msg","parseInt","toLocaleString","state","Loading","fadeLoading","draggable","src","Cafes","alt","URL","parseData","relevant","Promise","resolve","reject","Error","enCollator","Intl","Collator","ignorePunctuation","sensitivity","cell","compare","downloadData","Papa","parse","download","worker","error","header","complete","results","catch","console","promisedData","aggregate","url","stateID","countyID","urlWithKey","fetch","then","response","json","err","getPopulation","fetchPopulation","MainPage","setCounty","setStateUSA","fadeLocation","setFadeLocation","setFadeLoading","setData","loading","setLoading","setPopulation","popResponse","doWork","modalResolve","setStates","forEach","set","App","path","exact","component","MSCompatibleInfo","alert","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+TAgEeA,EAzDK,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5CC,EAAYL,EAAK,GACjBM,EAAeN,EAAK,GAFuC,EAGjCO,oBAAS,GAHwB,mBAG1DC,EAH0D,KAGhDC,EAHgD,KAuBjE,OACE,kBAACC,EAAA,EAAD,CACEV,OAAQK,EACRM,SAAS,SACTC,UAAU,EACVC,UAAQ,EACRC,OAAQ,kBAAMR,GAAa,IAC3BS,SAAU,WAfRP,GACFL,IACAM,GAAY,IAEZL,MAaA,kBAACM,EAAA,EAAMM,OAAP,CACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,aAAW,GAEX,kBAACX,EAAA,EAAMY,MAAP,KAAcrB,IAEhB,kBAACS,EAAA,EAAMa,KAAP,KACE,2BAAIrB,IAEN,kBAACQ,EAAA,EAAMc,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAxCvClB,GAAY,QACZH,GAAa,KAuCT,gBAGA,kBAACmB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WAtCzCrB,GAAa,KAsCT,a,kBC7BOsB,EAlBQ,WACrB,OACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,MAAMC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOP,QAAQ,QAClE,kBAACG,EAAA,EAAOK,MAAR,CAAcC,KAAI,UAAKC,SAAL,MAAlB,YACA,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUR,KAAI,UAAKC,SAAL,kBAAd,cACA,kBAACK,EAAA,EAAIE,KAAL,CAAUR,KAAI,UAAKC,SAAL,aAAd,SACA,kBAACK,EAAA,EAAIE,KAAL,CAAUC,IAAI,sBAAsBC,OAAO,SAASV,KAAK,2CAAzD,c,kBCAKX,MAZf,WACE,OACE,yBAAKkB,UAAU,eACb,kBAACI,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CAAKN,UAAU,0BACb,uBAAGA,UAAU,eAAb,SAAmC,IAAIO,MAAOC,cAA9C,6CCQKC,EAZI,WACjB,OACE,yBAAKT,UAAU,oBACb,wBAAIA,UAAU,2BAAd,uBACA,yBAAKA,UAAU,mBACb,2BCVM,05BDWN,2BEXM,0gBC6DCU,EA1DG,WAKhB,OACE,yBAAKV,UAJW,cAIhB,6OAIE,wBAAIA,UAPe,oBAOnB,YAJF,0CAKuC,IACrC,uBAAGG,OAAO,SAASD,IAAI,sBAAsBT,KAAK,8CAAlD,2BANF,6GAS8G,IAE1G,uBACEU,OAAO,SACPD,IAAI,sBACJT,KAAK,oGAHP,iDAOA,IAlBJ,gJAoB6B,IAC3B,uBAAGU,OAAO,SAASD,IAAI,sBAAsBT,KAAK,2BAAlD,aArBF,IAwBG,wBAAIO,UA3Bc,oBA2BlB,YAxBH,mSA2BsE,IACpE,uBAAGG,OAAO,SAASD,IAAI,sBAAsBT,KAAI,UAAKC,SAAL,kBAAjD,cA5BF,IA+BG,wBAAIM,UAlCc,oBAkClB,wBA/BH,8IAkCE,wBAAIA,UArCe,oBAqCnB,8BAlCF,ooBAyCE,wBAAIA,UA5Ce,oBA4CnB,cAzCF,iJA2CwC,IACnB,qBAAXW,QACN,uBAAGlB,KAAK,6CAAR,qCA7CJ,MCIWmB,EATD,WACZ,OACE,yBAAKZ,UAAU,oBACb,wBAAIA,UAAU,2BAAd,SACA,kBAAC,EAAD,Q,yBCKSa,EATC,WACd,OACE,yBAAKb,UAAU,WACb,0BAAMA,UAAU,gBAAhB,uBACA,uBAAGA,UAAU,iCAAb,iDCwBSc,EA7BM,WACnB,OACE,yBAAKd,UAAU,gBACb,uBAAGA,UAAU,QAAb,sDACA,6UAGwF,IAEpF,uBACEG,OAAO,SACPD,IAAI,sBACJT,KAAK,oGAHP,mBAOA,IAZJ,sCAasC,IAElC,uBAAGU,OAAO,SAASD,IAAI,sBAAsBT,KAAI,UAAKC,SAAL,aAAjD,SAGA,IAlBJ,W,QCiBN,IAAMqB,EAAS,CACbC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,WACJC,GAAI,cACJC,GAAI,WACJC,GAAI,UACJC,GAAI,UACJC,GAAI,SACJC,GAAI,QACJC,GAAI,WACJC,GAAI,UACJC,GAAI,OACJC,GAAI,SACJC,GAAI,WACJC,GAAI,YACJC,GAAI,gBACJC,GAAI,QACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,cACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,gBACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,OACJC,GAAI,WACJC,GAAI,SACJC,GAAI,eACJC,GAAI,eACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,YACJC,GAAI,QACJC,GAAI,OACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,gBACJC,GAAI,YACJC,GAAI,WAGSC,EAxEf,YAAwD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAC9BC,EAAkBF,GAAY,eAEpC,OACE,kBAACG,EAAA,EAAD,CAAUtE,UAAU,yCAAyCuE,SAAU,SAACC,GAAD,OAAOJ,EAAcI,IAAIC,KAAK,QACnG,kBAACH,EAAA,EAAS3E,OAAV,CAAiBG,GAAG,qBAAqBd,QAAQ,WAC9CqF,GAEH,kBAACC,EAAA,EAASI,KAAV,CAAeC,MAAM,GAClBC,OAAOC,KAAK9D,GAAQ+D,KAAI,SAACC,GAAD,OACvB,kBAACT,EAAA,EAASU,KAAV,CAAeC,IAAKF,EAAcG,SAAUnE,EAAOgE,IAChDA,SC6Eb,IAAMI,EAAoB,SAACC,GACzB,IAAMC,EAAQD,EAAOE,OAAOC,MAAM,KAIlC,GAA+B,WAHdF,EAAMA,EAAMG,OAAS,GAGzBC,cAA4B,CACvC,IAAMC,EAAYN,EAAOO,YAAY,KACrCP,EAASA,EAAOQ,UAAU,EAAGF,GAM/B,OAFAN,EAASA,EAAOS,OAAO,GAAGC,cAAgBV,EAAOW,MAAM,GAAGN,eAMtDO,EACJ,0BAAMhG,UAAU,oBAAhB,yLAEoE,IAClE,uBAAGG,OAAO,SAASD,IAAI,sBAAsBT,KAAI,UAAKC,SAAL,kBAAjD,cAHF,KAUauG,EA7Ff,YAAoE,IAA5CC,EAA2C,EAA3CA,eAAgB/B,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAAiB,EArBlD,SAAC+B,GAAkB,IAAD,EACPtI,mBAASsI,GADF,mBAC1BC,EAD0B,KACnBC,EADmB,KAGjC,MAAO,CACLD,QACAC,WACAC,MAAO,kBAAMD,EAAS,KACtBE,KAAM,CACJH,QACAI,SAAU,SAACC,GACTJ,EAASI,EAAMtG,OAAOiG,UAYgBM,CAAS,IAAtCtB,EADkD,EACzDgB,MAAqBO,EADoC,EAC1CJ,KAD0C,EAE/B1I,oBAAS,GAFsB,mBAE1D+I,EAF0D,KAE/CC,EAF+C,KAI3DC,EAAoBC,uBACxB,SAACN,GAEC,IAAMO,EAAiB7B,EAAkBC,GACzCc,EAAec,KAEjB,CAACd,EAAgBd,IAmBnB,OACE,6BACE,kBAAC,EAAD,CACE9H,KAAM,CAACsJ,EAAWC,GAClBpJ,SAAUqJ,EACVpJ,SAlBoB,WACxBmJ,GAAa,IAkBTtJ,MAAO,aACPC,KAAMwI,IAER,0BAAMhG,UAAU,WAAWiH,SAdN,SAACR,GACxBA,EAAMS,iBACNL,GAAa,KAaT,yCACE/G,GAAG,oBACHE,UAAU,sDACVmH,WAAW,EACXC,KAAK,OACLC,YAAajC,GAAU,kBACnBuB,IAEN,kBAAC,EAAD,CAAkBxC,SAAUA,EAAUC,cAAeA,IACrD,kBAACrF,EAAA,EAAD,CACEC,QAAQ,UACRoI,KAAK,SACLpH,UAAWmE,GAAYiB,EAAS,kCAAoC,wBACpEkC,WAAYnD,GAAYiB,IAJ1B,aCkCOmC,EAjGY,SAACC,GAC1B,IAAMC,EAAaD,EAAMC,WACnBrC,EAASoC,EAAMpC,OACfjB,EAAWqD,EAAMrD,SAEjBuD,EAAW,SAACD,GAChB,IAAME,EAAgBC,OAAOH,GAC7B,OAAIE,EAAgB,EACX,QACEA,GAAiB,GAAKA,EAAgB,GACxC,cACEA,GAAiB,IAAMA,EAAgB,GAvBpC,UAyBHA,GAAiB,IAAMA,GAAiB,IAC1C,SACEA,EAAgB,IAClB,MAEA,SAILE,EAAkB,SAACJ,EAAYK,GACnC,IASIC,EATEJ,EAAgBC,OAAOH,GACvBO,EAAO,CACXC,OAAQ,CAAC,cAAe,SACxBC,MAAO,CAAC,aAAc,eACtBC,SAAU,CAAC,gBAvCC,WAwCZC,OAAQ,CAAC,cAAe,UACxBC,QAAS,CAAC,eAAgB,QAqB5B,OAfEN,EADEJ,EAAgB,EACHK,EAAKC,OACXN,GAAiB,GAAKA,EAAgB,GAChCK,EAAKE,MACXP,GAAiB,IAAMA,EAAgB,GACjCK,EAAKG,SACXR,GAAiB,IAAMA,GAAiB,IAClCK,EAAKI,OAELJ,EAAKK,QAGlBP,IACFC,EAAa,GAAK,SAGb,0BAAMxJ,MAAO,CAAE+J,MAAOP,EAAa,KAAOA,EAAa,KAGhE,OACE,yBAAK/H,UAAU,qBACb,yBAAKA,UAAU,mBAAmBzB,MAAO,CAAEgK,gBAAiBb,EAASD,KAClEI,EAAgBJ,GAAY,IAE/B,yBAAKzH,UAAU,uBACb,yBAAKzB,MAAO,CAAEiK,KAAM,IAClB,0BAAMxI,UAAU,OAAOzB,MAAO,CAAE+J,MAAOZ,EAASD,KAC7CA,GAEH,8BACE,uBAAGzH,UAAU,QAAb,0EACyE,6BADzE,kBAEkB6H,EAAgBJ,GAFlC,4CAEwFrC,EAFxF,KAEkGjB,EAAU,IAF5G,kCAOJ,yBAAKnE,UAAU,mBAAmBzB,MAAO,CAAEiK,KAAM,IAC/C,0BAAMxI,UAAU,iBAAhB,gBADF,6FAGE,6BACA,0BAAMA,UAAU,oBAAhB,eAJF,oGAME,6BACA,0BAAMA,UAAU,oBAAhB,iBAPF,4FASE,6BACA,0BAAMA,UAAU,0BAAhB,cAVF,4FAYE,6BACA,0BAAMA,UAAU,mBAAhB,eAbF,2FAeE,iC,oDCtDKyI,EA9BG,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,QAAStL,EAAwB,EAAxBA,MAAOuL,EAAiB,EAAjBA,WAE7D,OACE,yBAAKC,IAAKF,EAAS7I,UAAS,uBAAkB8I,IAC5C,4BAAKvL,GACL,kBAAC,IAAD,CAAqByL,OAAQ,KAC3B,kBAAC,IAAD,CAAWN,KAAMA,GACf,kBAAC,IAAD,CAAeO,YAAY,EAAOC,UAAU,IAC5C,kBAAC,IAAD,CAAOC,QAASR,IAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,MAECC,EAAU9D,KAAI,SAACsE,GAAD,OACb,kBAAC,IAAD,CAAMhC,KAAK,SAAS+B,QAASC,EAAMnE,IAAKmE,WCqCpD,SAASC,EAAT,GAAwE,IAA1CR,EAAyC,EAAzCA,QAASS,EAAgC,EAAhCA,SAAUpE,EAAsB,EAAtBA,SAAUqE,EAAY,EAAZA,SACnDC,EAAkBC,qBAAWC,KAE7BC,EAAmBC,YAAmB1E,GAAU,kBAAMqE,GAAYA,EAASrE,MAE3E2E,EAAoBL,IAAoBtE,EAKxC4E,EAAoB,WACpBjB,EAAQkB,UAAYF,GACtBhB,EAAQkB,QAAQC,eAAe,CAC7BC,MAAO,UACPC,OAAQ,UACRC,SAAU,YAKhB,OACE,kBAACC,EAAA,EAAUzK,OAAX,CACEV,QAAS,SAACiG,EAAUmF,GAElB,OADAC,WAAWR,EAAmB,KACvBH,EAAiBzE,EAAUmF,IAEpCE,GAAIC,IAAKlM,OACT0B,UAAU,kBANZ,iBAQiB6J,EAAoB,QAAU,cAR/C,aAUGP,GAWP,IAAMmB,EAAmB,SAACC,EAActB,GAItC,IAHA,IAAIuB,EAAc,GACZC,EAAoBF,EAAaG,QAE9BC,EAAI,EAAGA,EAAIJ,EAAalF,OAAQsF,IAAK,CAC5C,IAAMC,EAAML,EAAaI,GACnBE,EAAYF,EAAI,EAAIJ,EAAaI,EAAI,GAAKF,EAEhDD,EAAYM,KAAZ,aACEC,KAAMH,EAAIG,MADZ,cAEU9B,GAAS+B,KAAKC,IAAIL,EAAI3B,EAAK3D,eAAiBuF,EAAU5B,EAAK3D,eAAgB,KAIvF,OAAOkF,GAQMU,EAzHY,SAAC7D,GAE1B,IAAMqB,EAAUyC,IAAMC,OAAO,MACvBb,EAAelD,EAAMkD,aAAa3E,QACpCyF,EAAoBhE,EAAMkD,aAAa3E,QAC3CyF,EAAkBX,QAElB,IAAMY,EAAiBD,EAAkB1G,KAAI,SAACiG,GAAD,MAAU,CACrDG,KAAMH,EAAIG,KACV,oBAAqBH,EAAIW,WAGrBC,EAAmBlB,EAAiBC,EAAc,SAClDkB,EAAoBnB,EAAiBC,EAAc,UAEzD,OACE,kBAACN,EAAA,EAAD,CAAWpK,UAAU,SACnB,kBAACwK,EAAA,EAAD,KACE,kBAACnB,EAAD,CAAoBR,QAASA,EAAS3D,SAAS,MAC/C,kBAACkF,EAAA,EAAUvK,SAAX,CAAoBqF,SAAS,KAC3B,kBAACsF,EAAA,EAAK3L,KAAN,CAAWmB,UAAU,WACnB,+HACA,kBAAC,EAAD,CACEzC,MAAO,YACPsL,QAASA,EACTH,KAAMiD,EACNhD,QAAS,OACTC,UAAW,CAAC,aACZE,WAAW,mBAEb,kBAAC,EAAD,CACEvL,MAAO,aACPmL,KAAMkD,EACNjD,QAAS,OACTC,UAAW,CAAC,cACZE,WAAW,mBAEb,kBAAC,EAAD,CACEvL,MAAO,oBACPmL,KAAM+C,EACN9C,QAAS,OACTC,UAAW,CAAC,qBACZE,WAAW,wBCiBnB+C,EAAiB,SAACC,EAASC,EAAMC,GAKrC,IAJA,IAAMC,EAAgB,GAIbnB,EAAI,EAAGA,EAAIgB,EAAQtG,OAAQsF,IAAK,CACvC,IAAMoB,EAAgBJ,EAAQhB,EAAI,GAAGqB,MAC/BC,EAAiBN,EAAQhB,EAAI,GAAGY,OAEhCW,EAAkBP,EAAQhB,GAAGqB,MAAQD,EACrCI,EAAmBR,EAAQhB,GAAGY,OAASU,EAEvCG,EAAsBC,EAAmBF,GAAoBA,EAEnEL,EAAchB,KAAKE,KAAKC,IAAIiB,EAAkBE,EAAqB,IAMrE,OAAwB,IAHFN,EAAcQ,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAG1BX,GAcpC,SAASQ,EAAmBF,GAC1B,OAAOA,EAAmB,IAAO,GAGpBM,MAlGI,SAACpF,GAAW,IA0BzBqF,EA1BwB,EACQhP,mBAAS,MADjB,mBACrB4J,EADqB,KACTqF,EADS,OAEYjP,mBAAS,MAFrB,mBAErB6M,EAFqB,KAEPqC,EAFO,KAGpBrE,EAASlB,EAATkB,KACAsD,EAAexE,EAAfwE,WAaR,GAVAgB,qBAAU,WACR,GAAItC,EAAc,CAAC,IACTqB,EAASrD,EAAKA,EAAKlD,OAAS,GAA5BuG,KACFkB,EAAUpB,EAAenB,EAAcqB,EAAMC,GAEnDc,EAAc3B,KAAK+B,MAAMD,OAE1B,CAACvE,EAAMgC,EAAcsB,IAGpBA,IAAetB,EAAc,CAG/B,IAFA,IAAMyC,EAAa,GAEVrC,EADSpC,EAAKlD,OAAS,EACRsF,EAAIpC,EAAKlD,OAAS,GAAIsF,IAC5CqC,EAAWC,QAAQ1E,EAAKoC,IAE1BiC,EAAgBI,GAelB,OATIzC,IACFmC,EAAYnC,EAAa5F,KAAI,SAACiG,GAAD,MAAU,CACrCG,KAAMH,EAAIG,KACV,eAAgBH,EAAIoB,WAGZtB,QAIV,yBAAK7K,UAAU,cACZ0K,GACC,6BACE,kBAAC,EAAD,CAAWhC,KAAMmE,EAAWlE,QAAQ,OAAOC,UAAW,CAAC,kBACvD,kBAAC,EAAD,CAAoBnB,WAAYA,EAAYrC,OAAQoC,EAAMpC,OAAQjB,SAAUqD,EAAMrD,WAClF,kBAAC,EAAD,CAAoBuG,aAAcA,OChC7B2C,EAfD,SAAC,GAA+B,IACxClB,EADWmB,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAExBC,EAAM,GAEV,GAA2B,kBAAhBF,GAAmD,IAAvBA,EAAY9H,OAAc,CAE/D2G,EADamB,IACK9H,OAAS,GAAG2G,MAC9BA,EAAQsB,SAAStB,GAAOuB,iBAHuC,MAIvC,CAACH,EAAS,GAAIA,EAAS,IAAxCnI,EAJwD,KAIhDuI,EAJgD,KAK/DH,EAAG,UAAMrB,EAAN,4BAA+B/G,EAA/B,aAA0CuI,GAG/C,OAAO,wBAAI3N,UAAU,SAASwN,I,iBCYjBI,EAtBC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjB,OACE,6BACE,yBAAK7N,UAAW6N,EAAc,mBAAqB,mBACjD,yBAAK7N,UAAU,qBACb,6BACE,0BAAMA,UAAU,gBAAhB,wCASF,yBAAKA,UAAU,eAAe8N,UAAU,QAAQC,IAAKC,IAAOC,IAAI,a,kBCpBpEC,EAAM,iF,SAEGC,G,qFAAf,WAAyBzF,EAAMtD,EAAQuI,GAAvC,eAAAjB,EAAA,6DACQ0B,EAAW,GADnB,kBAES,IAAIC,SAAQ,SAACC,EAASC,GACtB7F,GACH6F,EAAO,IAAIC,MAAM,kDAQnB,IALA,IAAMC,EAAa,IAAIC,KAAKC,SAAS,KAAM,CACzCC,mBAAmB,EACnBC,YAAa,SAGN/D,EAAI,EAAGA,EAAIpC,EAAKlD,OAAQsF,IAAK,CACpC,IAAMgE,EAAOpG,EAAKoC,GAC8B,IAA5C2D,EAAWM,QAAQD,EAAK1J,OAAQA,IAA2D,IAA1CqJ,EAAWM,QAAQD,EAAKnB,MAAOA,IAClFS,EAASnD,KAAK6D,GAIdV,EAAS5I,OACX8I,EAAQF,GAERG,EAAO,IAAIC,MAAM,yCAtBvB,4C,oEAgCA,WAAyBpJ,EAAQuI,GAAjC,iBAAAjB,EAAA,6DACQsC,EAAe,WACnB,OAAO,IAAIX,SAAQ,SAACC,EAASC,GAC3BU,IAAKC,MAAMhB,EAAK,CACdiB,UAAU,EACVC,QAAQ,EACRC,MAAO,SAAC7K,GACN+J,EAAO/J,IAET8K,QAAQ,EACRC,SAAU,SAACC,GACTlB,EAAQkB,EAAQ9G,aAX1B,SAiB6BsG,IAAeS,OAAM,SAACjL,GAAD,OAAOkL,QAAQL,MAAM,2CAA4C7K,MAjBnH,cAiBQmL,EAjBR,yBAmBSxB,GAAUwB,EAAcvK,EAAQuI,IAnBzC,4C,sBAsBeiC,O,6FClDf,WAA+B7D,EAAMlF,GAArC,uBAAA6F,EAAA,6DAEMmD,EAAM,8DAEJC,EAAU/D,EAAKnG,UAAU,EAAG,GAE5BmK,EAAWhE,EAAKnG,UAAU,EAAG,GACnCiK,GAAG,qBAAkBE,EAAlB,qBAAuCD,GACpCE,EAAaH,EAAG,eAfD,4CAuCf7D,EAnBgB,WACpB,OAAO,IAAIqC,SAAQ,SAACC,EAASC,GAAV,OACjB0B,MAAMD,GACHE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAU9B,EAAQ8B,EAAK,GAAG,OAE/BX,OAAM,SAACY,GACNX,QAAQL,MAAM,mDAAoDgB,GAClEJ,MAAMJ,GACHK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAU9B,EAAQ8B,EAAK,GAAG,OAC/BX,OAAM,SAACjL,GACNkL,QAAQL,MAAM,+CAAgD7K,GAC9D+J,EAAO/J,YAMA8L,GAAgBb,OAAM,kBACvC5I,EAAa,8EAjCjB,kBAoCSmF,GApCT,4C,sBAuCeuE,O,+CC+DAC,GAhGE,SAAC,GAcX,IAbLpL,EAaI,EAbJA,OACAqL,EAYI,EAZJA,UACAtM,EAWI,EAXJA,SACAuM,EAUI,EAVJA,YACAC,EASI,EATJA,aACAC,EAQI,EARJA,gBACA/C,EAOI,EAPJA,YACAgD,EAMI,EANJA,eACAnI,EAKI,EALJA,KACAoI,EAII,EAJJA,QACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACAnK,EACI,EADJA,aACI,EACgChJ,oBAAS,GADzC,mBACGmO,EADH,KACeiF,EADf,KA4CJ,OAzCAjE,qBAAU,WAAM,4CACd,sBAAAN,EAAA,sDAEEkD,GAAUxK,EAAQjB,GACfsL,OAAM,SAACY,GACNX,QAAQL,MAAM,2BAA4BgB,GAC1CxJ,EACE,0KAGHqJ,MAAK,SAACC,GAELW,EAAQX,GAFU,IAKVpE,EAASoE,EAASA,EAAS3K,OAAS,GAApCuG,KAERwE,GAAgBxE,EAAMlF,GACnB4I,OAAM,SAACjL,GAAD,OAAOqC,EAAa,8EAC1BqJ,MAAK,SAACgB,GACLD,EAAcC,GAEdL,GAAe,GACfvG,YAAW,WACTuG,GAAe,GACfG,GAAW,KACV,WAzBb,4CADc,sBA+BV5L,GAAUjB,IACZyM,GAAgB,GAChBtG,YAAW,WACTsG,GAAgB,GAChBI,GAAW,KACV,KApCU,WAAD,wBAqCZG,MAED,CAAC/L,EAAQ0L,EAASD,EAAgBD,EAAiBI,EAAYnK,EAAc1C,KAE5EwM,GAAkBvL,GAAUjB,EAgB5BiB,GAAUjB,EAER4M,EACK,kBAAC,EAAD,CAASlD,YAAaA,IAI7B,yBAAK7N,UAAW+Q,EAAU,MAAQ,eAChC,kBAAC,EAAD,CAAOzD,YAAa5E,EAAM6E,SAAU,CAACnI,EAAQjB,KAC7C,kBAAC,EAAD,CACE6H,WAAYA,EACZgF,WAAYA,EACZH,eAAgBA,EAChBnI,KAAMA,EACNtD,OAAQA,EACRjB,SAAUA,UAflB,EAbI,6BACE,yBAAKnE,UAAW2Q,EAAe,eAAiB,OAC9C,yBAAK3Q,UAAU,wBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAckG,eAAgBuK,EAAWtM,SAAUA,EAAUC,cAAesM,IAC5E,kBAAC,EAAD,MACA,yBAAK1Q,UAAU,OAAO8N,UAAU,QAAQC,IAAKC,IAAOC,IAAI,aCXpE,SAASmD,KAA4B,IAAD,uBAAXC,EAAW,yBAAXA,EAAW,gBAClCA,EAAUC,SAAQ,SAACC,GACjBA,GAAI,MAIOC,OA9Df,WAAgB,IAAD,EACe3T,mBAAS,MADxB,mBACNuH,EADM,KACEqL,EADF,OAEmB5S,mBAAS,MAF5B,mBAENsG,EAFM,KAEIuM,EAFJ,OAGW7S,mBAAS,IAHpB,mBAGN6K,EAHM,KAGAoI,EAHA,OAIqBjT,oBAAS,GAJ9B,mBAIN+I,EAJM,KAIKC,EAJL,OAKiBhJ,oBAAS,GAL1B,mBAKNkT,EALM,KAKGC,EALH,OAM2BnT,oBAAS,GANpC,mBAMN8S,EANM,KAMQC,EANR,OAOyB/S,oBAAS,GAPlC,mBAONgQ,EAPM,KAOOgD,EAPP,KASb,OACE,yBAAK7Q,UAAU,YAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyR,KAAK,KACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,KAChB,kBAAC,EAAD,CACEnU,KAAM,CAACsJ,EAAWC,GAClBpJ,SAAU,kBACR2T,GAAaX,EAAWC,EAAaI,EAASjK,EAAcmK,EAAYJ,EAAiBC,IAE3FnT,SAAU,kBACR0T,GAAaX,EAAWC,EAAaI,EAASjK,EAAcmK,EAAYJ,EAAiBC,IAE3FtT,MAAM,QACNC,KAAMoJ,IAER,kBAAC,GAAD,CACExB,OAAQA,EACRqL,UAAWA,EACXtM,SAAUA,EACVuM,YAAaA,EACbC,aAAcA,EACdC,gBAAiBA,EACjB/C,YAAaA,EACbgD,eAAgBA,EAChBnI,KAAMA,EACNoI,QAASA,EACTC,QAASA,EACTC,WAAYA,EACZnK,aAAcA,KAGlB,kBAAC,IAAD,CAAO4K,KAAK,cAAcE,UAAWlR,IACrC,kBAAC,IAAD,CAAOgR,KAAK,SAASE,UAAW/Q,KAElC,kBAAC,IAAD,CAAO6Q,KAAK,KACV,kBAAC,EAAD,UC1DV,GAA+B,MAA3B9Q,OAAOiR,iBAA0B,CACnC,IAAMpE,GAAM,kEAEZ,MADAqE,MAAMrE,IACA,IAAIgB,MAAMhB,IAGlBsE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U,mBChB1BC,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.f80958cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\n/**\n * Abstracted modal component used for all modals on site.\n * @param {*} props If modal is showing, the title of modal, the body of modal, function if accepted, function if cancelled.\n */\nconst CustomModal = ({ show, title, body, onAccept, onCancel }) => {\n  const showModal = show[0];\n  const setShowModal = show[1];\n  const [accepted, setAccepted] = useState(false);\n\n  const handleAccept = () => {\n    setAccepted(true);\n    setShowModal(false);\n  };\n\n  const handleCancel = () => {\n    setShowModal(false);\n  };\n\n  const handleExited = () => {\n    if (accepted) {\n      onAccept();\n      setAccepted(false);\n    } else {\n      onCancel();\n    }\n  };\n\n  return (\n    <Modal\n      show={!!showModal}\n      backdrop=\"static\"\n      keyboard={false}\n      centered\n      onHide={() => setShowModal(false)}\n      onExited={() => handleExited()}\n    >\n      <Modal.Header\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n        closeButton\n      >\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>{body}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={() => handleAccept()}>\n          I Understand\n        </Button>\n        <Button variant=\"secondary\" onClick={() => handleCancel()}>\n          Cancel\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CustomModal;\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\n\n/**\n * Navigation bar located at the top of all pages.\n * Responsive: will adjust based on device screen size,\n *             and transition to \"hamburger\" menu on\n *             mobile devices.\n */\nconst NavbarReactive = () => {\n  return (\n    <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href={`${process.env.PUBLIC_URL}/`}>Cafés</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href={`${process.env.PUBLIC_URL}/#/disclaimer`}>Disclaimer</Nav.Link>\n          <Nav.Link href={`${process.env.PUBLIC_URL}/#/about`}>About</Nav.Link>\n          <Nav.Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/simon-bruklich/Cafes\">\n            GitHub\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavbarReactive;\n","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\n/**\n * Footer that is present on all pages.\n */\nfunction Footer() {\n  return (\n    <div className=\"main-footer\">\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <p className=\"footer-text\">&copy; {new Date().getFullYear()} Simon Bruklich | All Rights Reserved</p>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport GeneralDisclaimer from './General';\nimport MedicalHealthDisclaimer from './Medical';\n\n/**\n * Disclaimer page containing a General Disclaimer as well as a Medical Disclaimer.\n */\nconst Disclaimer = () => {\n  return (\n    <div className=\"about-disclaimer\">\n      <h1 className=\"about-disclaimer-header\">Cafés Disclaimer</h1>\n      <div className=\"disclaimer-text\">\n        <p>{GeneralDisclaimer}</p>\n        <p>{MedicalHealthDisclaimer}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Disclaimer;\n","// General information disclaimer text\n\nexport default `\nThe information provided by Simon Bruklich (“we,” “us”, \"I\", \"my\", or “our”) on Cafés (the “Site”) and our mobile application is for general informational purposes only. All information on the Site and our mobile application is provided in good faith, however we make no representation or warranty of any kind, express or implied, regarding the accuracy, adequacy, validity, reliability, availability or completeness of any information on the Site or our mobile application.\n\nUnder no circumstance shall we have any liability to you for any loss or damage of any kind incurred as a result of the use of the site or our mobile application or reliance on any information provided on the site and our mobile application. Your use of the site and our mobile application and your reliance on any information on the site and our mobile application is solely at your own risk.\n`;\n","// Medical disclaimer text\n\nexport default `\nThe Site cannot and does not contain medical/health advice. The medical/health information is provided for general informational and educational purposes only and is not a substitute for professional advice.\n\nAccordingly, before taking any actions based upon such information, we encourage you to consult with the appropriate professionals. We do not provide any kind of medical/health advice. The use or reliance of any information contained on this site or our mobile application is solely at your own risk.\n`;\n","import React from 'react';\n\n/**\n * Text content of the \"About\" page.\n */\nconst AboutText = () => {\n  // CSS for about page, can be modified (added/removed) here\n  const aboutText = 'about-text';\n  const aboutSubHeader = 'about-sub-header';\n\n  return (\n    <div className={aboutText}>\n      This website, Cafés (Covid-19 Advisory for Educational Systems), was designed and developed by Simon Bruklich\n      through a combination of React and JavaScript. The site was built completely from scratch, without the use of a\n      template.\n      <h3 className={aboutSubHeader}>Overview</h3>\n      Cafés uses Covid-19 data provided by{' '}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/CSSEGISandData/COVID-19\">\n        John Hopkins University\n      </a>\n      . This data is updated daily for all counties in the United States of America. Cafés will use the CDC&#39;s{' '}\n      {\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.cdc.gov/coronavirus/2019-ncov/community/schools-childcare/indicators.html#thresholds\"\n        >\n          Indicators for Dynamic School Decision-Making\n        </a>\n      }{' '}\n      to present an analysis for the user. Cafés will then analyze this data in the context of the most recent county\n      population provided by the{' '}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.census.gov/\">\n        US Census\n      </a>\n      .<h3 className={aboutSubHeader}>Accuracy</h3>\n      It is important to remember that Cafés provides a best-effort estimate that is updated daily using currently\n      available data. Although there are many factors that the CDC uses, Cafés only analyzes based on the first\n      variable: new Covid-19 cases. For more information, please read our{' '}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${process.env.PUBLIC_URL}/#/disclaimer`}>\n        Disclaimer\n      </a>\n      .<h3 className={aboutSubHeader}>Mobile Compatability</h3>\n      This site was designed with various screen sizes in mind ranging from large desktop monitors to laptop screens and\n      to small mobile devices.\n      <h3 className={aboutSubHeader}>Performance Considerations</h3>\n      Cafés runs completely locally on your machine and does not rely on servers to pre-process data. Because of this,\n      Cafés is very resilient against Denial-of-Service and performance loss due to high traffic. However, this also\n      means that Cafés requires a significant amount of data to be downloaded and processed; this means that loading\n      times are highly dependent on the performance of the user&#39;s internet connection and local machine. Future\n      plans for this project involve integration with Heroku or other Cloud platforms to store and pre-process data\n      before sending results to the user which should significantly improve load times.\n      <h3 className={aboutSubHeader}>Contact Us</h3>\n      Please report any issues on the Github page for this project. If this tool has helped you or if you have\n      questions, feel free to contact me at{' '}\n      {typeof window !== 'undefined' && (\n        <a href=\"mailto: bruklich.s+cafes@northeastern.edu\">bruklich.s+cafes@northeastern.edu</a>\n      )}\n      .\n    </div>\n  );\n};\n\nexport default AboutText;\n","import React from 'react';\nimport AboutText from './AboutText';\n\n/**\n * About page, containing the given AboutText content.\n */\nconst About = () => {\n  return (\n    <div className=\"about-disclaimer\">\n      <h1 className=\"about-disclaimer-header\">About</h1>\n      <AboutText />\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\n/**\n * Large, bolded user welcome shown at the top of the main page.\n *\n */\nconst Welcome = () => {\n  return (\n    <div className=\"welcome\">\n      <span className=\"welcome-text\">Welcome to Cafés</span>\n      <p className=\"welcome-text welcome-one-line\">(Covid-19 Advising For Educational Systems)</p>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import React from 'react';\n\n/**\n * The user introduction that appears below the location form on the main page.\n */\nconst Introduction = () => {\n  return (\n    <div className=\"introduction\">\n      <p className=\"bold\">Enter your county information above to get started</p>\n      <p>\n        Cafés provides school administrators, teachers, students, parents and many others with a Covid-19 risk\n        assessment for schools in the given county. The Covid-19 risk assessment is generated from data that is updated\n        daily and provides an estimated risk of Covid-19 transmission in schools based off of{' '}\n        {\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.cdc.gov/coronavirus/2019-ncov/community/schools-childcare/indicators.html#thresholds\"\n          >\n            CDC guidelines.\n          </a>\n        }{' '}\n        For more information, check out our{' '}\n        {\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${process.env.PUBLIC_URL}/#/about`}>\n            About\n          </a>\n        }{' '}\n        page.\n      </p>\n    </div>\n  );\n};\n\nexport default Introduction;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n/**\n * Dropdown menu to select U.S. State.\n * @param {*} Props Selected State and function to perform on U.S. State input change.\n */\nfunction DropdownStateUSA({ stateUSA, onStateChange }) {\n  const displayStateUSA = stateUSA || 'Select State';\n\n  return (\n    <Dropdown className=\"margin-bottom-15 padding-horizontal-10\" onSelect={(e) => onStateChange(e)} drop=\"down\">\n      <Dropdown.Toggle id=\"locations-dropdown\" variant=\"primary\">\n        {displayStateUSA}\n      </Dropdown.Toggle>\n      <Dropdown.Menu flip={false}>\n        {Object.keys(states).map((abbreviation) => (\n          <Dropdown.Item key={abbreviation} eventKey={states[abbreviation]}>\n            {abbreviation}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nconst states = {\n  AL: 'Alabama',\n  AK: 'Alaska',\n  AZ: 'Arizona',\n  AR: 'Arkansas',\n  CA: 'California',\n  CO: 'Colorado',\n  CT: 'Connecticut',\n  DE: 'Delaware',\n  FL: 'Florida',\n  GA: 'Georgia',\n  HI: 'Hawaii',\n  ID: 'Idaho',\n  IL: 'Illinois',\n  IN: 'Indiana',\n  IA: 'Iowa',\n  KS: 'Kansas',\n  KY: 'Kentucky',\n  LA: 'Louisiana',\n  MA: 'Massachusetts',\n  ME: 'Maine',\n  MD: 'Maryland',\n  MI: 'Michigan',\n  MN: 'Minnesota',\n  MS: 'Mississippi',\n  MO: 'Missouri',\n  MT: 'Montana',\n  NE: 'Nebraska',\n  NV: 'Nevada',\n  NH: 'New Hampshire',\n  NJ: 'New Jersey',\n  NM: 'New Mexico',\n  NY: 'New York',\n  NC: 'North Carolina',\n  ND: 'North Dakota',\n  OH: 'Ohio',\n  OK: 'Oklahoma',\n  OR: 'Oregon',\n  PA: 'Pennsylvania',\n  RI: 'Rhode Island',\n  SC: 'South Carolina',\n  SD: 'South Dakota',\n  TN: 'Tennessee',\n  TX: 'Texas',\n  UT: 'Utah',\n  VT: 'Vermont',\n  VA: 'Virginia',\n  WA: 'Washington',\n  WV: 'West Virginia',\n  WI: 'Wisconsin',\n  WY: 'Wyoming',\n};\n\nexport default DropdownStateUSA;\n","import React, { useState, useCallback } from 'react';\nimport DropdownStateUSA from './DropdownStateUSA';\nimport { Button } from 'react-bootstrap';\nimport DisclaimerModal from '../Modal';\n\n/**\n * Update County location input as user types in String on form.\n * @param {*} initialValue Current value of County location.\n */\nconst useInput = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(''),\n    bind: {\n      value,\n      onChange: (event) => {\n        setValue(event.target.value);\n      },\n    },\n  };\n};\n\n/**\n * Provides the location form in which the user can provide desired location data.\n * // Security Note: JSX is already sanitized, no need to re-sanitize input\n * @param {*} props Value of currently selected U.S. State and functions to perform when changing county/state.\n */\nfunction LocationForm({ onCountyChange, stateUSA, onStateChange }) {\n  const { value: county, bind: bindCounty } = useInput('');\n  const [modalShow, setModalShow] = useState(false);\n\n  const handleAcceptModal = useCallback(\n    (event) => {\n      // Normalize case\n      const standardCounty = standardizeCounty(county);\n      onCountyChange(standardCounty);\n    },\n    [onCountyChange, county]\n  );\n\n  /**\n   * Cancel modal if user does not agree to disclaimer.\n   */\n  const handleCancelModal = () => {\n    setModalShow(false);\n  };\n\n  /**\n   * Display disclaimer pop-up when user submits location form.\n   * @param {*} event Submit form page event (refresh page and clear input)\n   */\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    setModalShow(true);\n  };\n\n  return (\n    <div>\n      <DisclaimerModal\n        show={[modalShow, setModalShow]}\n        onAccept={handleAcceptModal}\n        onCancel={handleCancelModal}\n        title={'Disclaimer'}\n        body={disclaimerText}\n      ></DisclaimerModal>\n      <form className=\"location\" onSubmit={handleFormSubmit}>\n        <input\n          id=\"county-name-input\"\n          className=\"margin-bottom-15 padding-horizontal-10 input-county\"\n          autoFocus={true}\n          type=\"text\"\n          placeholder={county || 'County name...'}\n          {...bindCounty}\n        />\n        <DropdownStateUSA stateUSA={stateUSA} onStateChange={onStateChange}></DropdownStateUSA>\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          className={stateUSA && county ? 'pulse-btn padding-horizontal-10' : 'padding-horizontal-10'}\n          disabled={!(stateUSA && county)}\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n}\n\n/**\n * Remove word \"county\" from end if present and standardize the spelling case of the string.\n * @param {String} county County string to standardize case and spelling of\n */\nconst standardizeCounty = (county) => {\n  const words = county.trim().split(' ');\n  const lastWord = words[words.length - 1];\n\n  // Remove word county from end\n  if (lastWord.toLowerCase() === 'county') {\n    const lastIndex = county.lastIndexOf(' ');\n    county = county.substring(0, lastIndex);\n  }\n\n  // Adjust case of county\n  county = county.charAt(0).toUpperCase() + county.slice(1).toLowerCase();\n\n  return county;\n};\n\n// Short disclaimer linking to complete disclaimer\nconst disclaimerText = (\n  <span className=\"disclaimer-modal\">\n    This site does not provide medical or health advice. Contact medical professionals for information regarding advice,\n    prevention and treatment. For more information, view our complete{' '}\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${process.env.PUBLIC_URL}/#/disclaimer`}>\n      disclaimer\n    </a>\n    .\n  </span>\n);\n\nexport default LocationForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst altYellow = '#f7c836';\n\n/**\n * Provides user with a recommendation based on CDC guidelines:\n * Lowest Risk: <5\n * Lower Risk: 5 to <20\n * Moderate Risk: 20 to <50\n * Higher Risk: 50 to <=200\n * High Risk: >200\n * https://www.cdc.gov/coronavirus/2019-ncov/community/schools-childcare/indicators.html#thresholds\n * @param {*} props Completed assessment of location as well as location data.\n */\nconst AssessmentAdvisory = (props) => {\n  const assessment = props.assessment;\n  const county = props.county;\n  const stateUSA = props.stateUSA;\n\n  const getColor = (assessment) => {\n    const assessmentNum = Number(assessment);\n    if (assessmentNum < 5) {\n      return 'green';\n    } else if (assessmentNum >= 5 && assessmentNum < 20) {\n      return 'yellowGreen';\n    } else if (assessmentNum >= 20 && assessmentNum < 50) {\n      return altYellow;\n    } else if (assessmentNum >= 50 && assessmentNum <= 200) {\n      return 'orange';\n    } else if (assessmentNum > 200) {\n      return 'red';\n    } else {\n      return 'black';\n    }\n  };\n\n  const getRiskCategory = (assessment, whiteText) => {\n    const assessmentNum = Number(assessment);\n    const risk = {\n      lowest: ['Lowest Risk', 'green'],\n      lower: ['Lower Risk', 'yellowGreen'],\n      moderate: ['Moderate Risk', altYellow],\n      higher: ['Higher Risk', 'orange'],\n      highest: ['Highest Risk', 'red'],\n    };\n\n    let assignedRisk;\n\n    if (assessmentNum < 5) {\n      assignedRisk = risk.lowest;\n    } else if (assessmentNum >= 5 && assessmentNum < 20) {\n      assignedRisk = risk.lower;\n    } else if (assessmentNum >= 20 && assessmentNum < 50) {\n      assignedRisk = risk.moderate;\n    } else if (assessmentNum >= 50 && assessmentNum <= 200) {\n      assignedRisk = risk.higher;\n    } else {\n      assignedRisk = risk.highest;\n    }\n\n    if (whiteText) {\n      assignedRisk[1] = 'white';\n    }\n\n    return <span style={{ color: assignedRisk[1] }}>{assignedRisk[0]}</span>;\n  };\n\n  return (\n    <div className=\"advisory-overview\">\n      <div className=\"primary-advisory\" style={{ backgroundColor: getColor(assessment) }}>\n        {getRiskCategory(assessment, true)}\n      </div>\n      <div className=\"detailed-assessment\">\n        <div style={{ flex: 1 }}>\n          <span className=\"bold\" style={{ color: getColor(assessment) }}>\n            {assessment}\n          </span>\n          <span>\n            <p className=\"bold\">\n              estimated new cases on average in the last 14 days per 100,000 people. <br />\n              This indicates {getRiskCategory(assessment)} for Covid-19 exposure in schools within {county}, {stateUSA}{' '}\n              according to CDC guidelines:\n            </p>\n          </span>\n        </div>\n        <div className=\"assessment-guide\" style={{ flex: 1 }}>\n          <span className=\"red font-bold\">Highest Risk</span>: More than 200 new cases on average in the last 14 days\n          per 100,000 people in this county\n          <hr />\n          <span className=\"orange font-bold\">Higher Risk</span>: Less or equal to 200 new cases on average in the last\n          14 days per 100,000 people in this county\n          <hr />\n          <span className=\"yellow font-bold\">Moderate Risk</span>: Less than 50 new cases on average in the last 14 days\n          per 100,000 people in this county\n          <hr />\n          <span className=\"yellow-green font-bold\">Lower Risk</span>: Less than 20 new cases on average in the last 14\n          days per 100,000 people in this county\n          <hr />\n          <span className=\"green font-bold\">Lowest Risk</span>: Less than 5 new cases on average in the last 14 days per\n          100,000 people in this county\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nAssessmentAdvisory.propTypes = {\n  assessment: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default AssessmentAdvisory;\n","import {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  // Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Abstracted linegraph component used for all linegraphs.\n * @param {*} props Data to present, name of key legend, name of charted line, viewRef context, title of graph, and optional top padding\n */\nconst LineGraph = ({ data, keyName, lineNames, viewRef, title, paddingTop }) => {\n  // Wrapped in ResponsiveContainer to avoid LineChart overlap with Legend\n  return (\n    <div ref={viewRef} className={`center chart ${paddingTop}`}>\n      <h4>{title}</h4>\n      <ResponsiveContainer height={250}>\n        <LineChart data={data}>\n          <CartesianGrid horizontal={false} vertical={false} />\n          <XAxis dataKey={keyName} />\n          <YAxis />\n          <Tooltip />\n          {/* <Legend verticalAlign=\"bottom\" align=\"center\" layout=\"horizontal\" /> */}\n          {lineNames.map((name) => (\n            <Line type=\"linear\" dataKey={name} key={name} />\n          ))}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nLineGraph.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  keyName: PropTypes.string,\n  lineNames: PropTypes.arrayOf(PropTypes.string),\n  viewRef: PropTypes.object,\n  title: PropTypes.string,\n  paddingTop: PropTypes.string,\n};\n\nexport default LineGraph;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion, Card, useAccordionToggle, AccordionContext } from 'react-bootstrap';\nimport LineGraph from '../LineGraph';\n\n/**\n * Provides the secondary assessments at the bottom of the assessments page that can be viewed by\n * toggling the accordion component.\n * @param {*} props The Covid-19 statistics of the given location for the last two weeks.\n */\nconst AssessmentMoreInfo = (props) => {\n  // Used to scroll into view\n  const viewRef = React.useRef(null);\n  const lastTwoWeeks = props.lastTwoWeeks.slice();\n  let lastTwoWeeksShift = props.lastTwoWeeks.slice();\n  lastTwoWeeksShift.shift();\n\n  const twoWeeksDeaths = lastTwoWeeksShift.map((day) => ({\n    date: day.date,\n    'Cumulative Deaths': day.deaths,\n  }));\n\n  const twoWeeksNewCases = calcNewDailyStat(lastTwoWeeks, 'Cases');\n  const twoWeeksNewDeaths = calcNewDailyStat(lastTwoWeeks, 'Deaths');\n\n  return (\n    <Accordion className=\"chart\">\n      <Card>\n        <ContextAwareToggle viewRef={viewRef} eventKey=\"0\" />\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body className=\"bg-gray\">\n            <p>Note: Data subject to change, especially for more recent days as figures continue to be reported</p>\n            <LineGraph\n              title={'New Cases'}\n              viewRef={viewRef}\n              data={twoWeeksNewCases}\n              keyName={'date'}\n              lineNames={['New Cases']}\n              paddingTop=\"padding-top-15\"\n            ></LineGraph>\n            <LineGraph\n              title={'New Deaths'}\n              data={twoWeeksNewDeaths}\n              keyName={'date'}\n              lineNames={['New Deaths']}\n              paddingTop=\"padding-top-15\"\n            ></LineGraph>\n            <LineGraph\n              title={'Cumulative Deaths'}\n              data={twoWeeksDeaths}\n              keyName={'date'}\n              lineNames={['Cumulative Deaths']}\n              paddingTop=\"padding-top-15\"\n            ></LineGraph>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n};\n\n/**\n * Provides self-aware Accordion component that knows its\n * open/close state and can automatically scroll user's view accordingly.\n * @param {*} object Object containing metadata and hooks for the HTML Accordion component.\n * @return {*} JSX containing self-aware Accordion component.\n */\nfunction ContextAwareToggle({ viewRef, children, eventKey, callback }) {\n  const currentEventKey = useContext(AccordionContext);\n\n  const decoratedOnClick = useAccordionToggle(eventKey, () => callback && callback(eventKey));\n\n  const isCurrentEventKey = currentEventKey === eventKey;\n\n  /**\n   * Scrolls the user's view to smoothly center on the Accordion component when opened.\n   */\n  const scrollToAccordion = () => {\n    if (viewRef.current && !isCurrentEventKey) {\n      viewRef.current.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest',\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  return (\n    <Accordion.Toggle\n      onClick={(eventKey, func) => {\n        setTimeout(scrollToAccordion, 400);\n        return decoratedOnClick(eventKey, func);\n      }}\n      as={Card.Header}\n      className=\"cursor-pointer\"\n    >\n      Click to Show {isCurrentEventKey ? 'Less ' : 'Additional '}\n      Statistics\n      {children}\n    </Accordion.Toggle>\n  );\n}\n\n/**\n * Calculates daily new statistic for each respective day that was given in the array.\n * @param {*} lastTwoWeeks Array of objects with metrics representing impact of virus on each respective day.\n * @param {*} name Name of daily new statistic to evaluate.\n * @return [{*}] Array of objects representing new cases for each respective day.\n */\nconst calcNewDailyStat = (lastTwoWeeks, name) => {\n  let dailyChange = [];\n  const firstDayBootstrap = lastTwoWeeks.shift();\n\n  for (let i = 0; i < lastTwoWeeks.length; i++) {\n    const day = lastTwoWeeks[i];\n    const yesterday = i > 0 ? lastTwoWeeks[i - 1] : firstDayBootstrap;\n\n    dailyChange.push({\n      date: day.date,\n      [`New ${name}`]: Math.max(day[name.toLowerCase()] - yesterday[name.toLowerCase()], 0),\n    });\n  }\n\n  return dailyChange;\n};\n\nAssessmentMoreInfo.propTypes = {\n  assessment: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  lastTwoWeeks: PropTypes.array,\n};\n\nexport default AssessmentMoreInfo;\n","import React, { useEffect, useState } from 'react';\nimport AssessmentAdvisory from './AssessmentAdvisory';\nimport AssessmentMoreInfo from './AssessmentMoreInfo';\nimport LineGraph from '../LineGraph';\n\n/**\n * Provides the main assessment page for the user based on given location.\n * @param {*} props county location, state location, aggregated data set, and population.\n */\nconst Assessment = (props) => {\n  const [assessment, setAssessment] = useState(null);\n  const [lastTwoWeeks, setLastTwoWeeks] = useState(null);\n  const { data } = props;\n  const { population } = props;\n\n  // Calculate average\n  useEffect(() => {\n    if (lastTwoWeeks) {\n      const { fips } = data[data.length - 1];\n      const average = computeAverage(lastTwoWeeks, fips, population);\n      // Done with all downloading at this point\n      setAssessment(Math.round(average));\n    }\n  }, [data, lastTwoWeeks, population]);\n\n  // Gather last two weeks + 1 day\n  if (population && !lastTwoWeeks) {\n    const workingSet = [];\n    const lastIndex = data.length - 1;\n    for (let i = lastIndex; i > data.length - 16; i--) {\n      workingSet.unshift(data[i]);\n    }\n    setLastTwoWeeks(workingSet);\n  }\n\n  let graphData;\n\n  // Compute main graph, remove leading bootstrap day\n  if (lastTwoWeeks) {\n    graphData = lastTwoWeeks.map((day) => ({\n      date: day.date,\n      'Active Cases': day.cases,\n    }));\n    // Skip first bootstrap day\n    graphData.shift();\n  }\n\n  return (\n    <div className=\"assessment\">\n      {lastTwoWeeks && (\n        <div>\n          <LineGraph data={graphData} keyName=\"date\" lineNames={['Active Cases']} />\n          <AssessmentAdvisory assessment={assessment} county={props.county} stateUSA={props.stateUSA} />\n          <AssessmentMoreInfo lastTwoWeeks={lastTwoWeeks} />\n        </div>\n      )}\n    </div>\n  );\n};\n\n/**\n * Calculate the 14-day new average cases statistics from which a CDC recommendation\n * may be derived.\n *\n * Note: Dataset must be presented in chronological order\n * @param {*} dataSet Given data set to compute average from.\n * @param {*} fips Fips location code of county/state.\n * @param {*} population Given population statistics to compute average from.\n */\nconst computeAverage = (dataSet, fips, population) => {\n  const newCasesByDay = [];\n\n  // Skip the first data point;\n  // It is only used as a baseline for calculating new cases on next day\n  for (let i = 1; i < dataSet.length; i++) {\n    const casesBaseLine = dataSet[i - 1].cases;\n    const deathsBaseLine = dataSet[i - 1].deaths;\n\n    const deltaCasesToday = dataSet[i].cases - casesBaseLine;\n    const deltaDeathsToday = dataSet[i].deaths - deathsBaseLine;\n\n    const deathsAndRecoveries = estimateRecoveries(deltaDeathsToday) + deltaDeathsToday;\n\n    newCasesByDay.push(Math.max(deltaCasesToday - deathsAndRecoveries, 0));\n  }\n\n  const totalNewCases = newCasesByDay.reduce((a, b) => a + b, 0);\n\n  // Calculate CDC statistic: (x / 100,000) = (new cases in last 14 days / County population);\n  return (totalNewCases * 100000) / population;\n};\n\n/**\n * Estimate the amount of people that have recovered from Covid-19.\n * This estimate is based on a 98% recovery rate.\n * This was isolated into its own function to bring awareness to and compartmentalize the\n * estimation that has to be made in calculation, due to a lack of statistics for \"daily new cases\" by County.\n * Simply taking the change in total cases does not work because \"new cases\"\n * may also be replacing deaths and recoveries in the \"total cases\" count.\n * Additionally, divide by 14 days as medical experts report 1-2 week recovery time for Covid-19.\n * @param {Integer} deltaDeathsToday Difference in death's between this date and the day prior.\n * @returns {Number} Estimated number of recoveries.\n */\nfunction estimateRecoveries(deltaDeathsToday) {\n  return deltaDeathsToday / 0.02 / 14;\n}\n\nexport default Assessment;\n","import React from 'react';\n\n/**\n * Component to show \"Cases\" summary at the top of the assessment page.\n * @param {*} props aggregation of data and name of the given location.\n */\nconst Cases = ({ aggregation, location }) => {\n  let cases;\n  let msg = '';\n\n  if (typeof aggregation === 'object' && aggregation.length !== 0) {\n    const data = aggregation;\n    cases = data[data.length - 1].cases;\n    cases = parseInt(cases).toLocaleString();\n    const [county, state] = [location[0], location[1]];\n    msg = `${cases} active cases in ${county}, ${state}`;\n  }\n\n  return <h1 className=\"cases\">{msg}</h1>;\n};\n\nexport default Cases;\n","import React from 'react';\nimport Cafes from '../Images/Cafes.png';\n// import { Spinner } from \"react-bootstrap\";\n\n/**\n * Loading component that appears while site is fetching and aggregating data.\n * @param {*} props Context for fadeLoading to determine when this screen can transition fade away.\n */\nconst Loading = ({ fadeLoading }) => {\n  return (\n    <div>\n      <div className={fadeLoading ? 'loading fade-out' : 'loading fade-in'}>\n        <div className=\"loading-secondary\">\n          <div>\n            <span className=\"loading-text\">Please wait, this may take a moment</span>\n            {/* <Spinner\n              className=\"loading-spinner\"\n              as=\"span\"\n              animation=\"border\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            /> */}\n          </div>\n          <img className=\"loading-logo\" draggable=\"false\" src={Cafes} alt=\"Logo\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import Papa from 'papaparse';\n\n// URL for Covid-19 data source on Github: John Hopkins University aggregation.\nconst URL = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv';\n\nasync function parseData(data, county, state) {\n  const relevant = [];\n  return new Promise((resolve, reject) => {\n    if (!data) {\n      reject(new Error('Unable to gather data, please try again later'));\n    }\n\n    const enCollator = new Intl.Collator('en', {\n      ignorePunctuation: true,\n      sensitivity: 'base',\n    });\n\n    for (let i = 0; i < data.length; i++) {\n      const cell = data[i];\n      if (enCollator.compare(cell.county, county) === 0 && enCollator.compare(cell.state, state) === 0) {\n        relevant.push(cell);\n      }\n    }\n\n    if (relevant.length) {\n      resolve(relevant);\n    } else {\n      reject(new Error('No data found for given location'));\n    }\n  });\n}\n\n/**\n * Download, parse, and aggregate Covid-19 for the given county and state.\n * @param {*} county County to aggregate Covid-19 data on.\n * @param {*} state The U.S. state in which the given County is located in.\n */\nasync function aggregate(county, state) {\n  const downloadData = () => {\n    return new Promise((resolve, reject) => {\n      Papa.parse(URL, {\n        download: true,\n        worker: true,\n        error: (e) => {\n          reject(e);\n        },\n        header: true,\n        complete: (results) => {\n          resolve(results.data);\n        },\n      });\n    });\n  };\n\n  const promisedData = await downloadData().catch((e) => console.error('Unable to fetch or parse Covid-19 data: ', e));\n\n  return parseData(promisedData, county, state);\n}\n\nexport default aggregate;\n","// NOTE: this key is NOT sensitive. Cafes will even work without this key.\n// It is used as a courtesy to the U.S. Census to assist their data analytics.\nconst CENSUS_API_KEY = '4ea13d96102d350d26d2f58793cb843a11f667b2';\n\n/**\n * Download and parse population statistics from U.S. Census API.\n * @param {*} fips Location data to get statistics from.\n * @param {*} setModalShow Set modal visibility in case of error.\n */\nasync function fetchPopulation(fips, setModalShow) {\n  // Construct URL\n  let url = 'https://api.census.gov/data/2019/pep/charagegroups?get=POP&';\n  // First 2 digits are state ID\n  const stateID = fips.substring(0, 2);\n  // Last 4 digits are county ID\n  const countyID = fips.substring(2, 6);\n  url += `for=county:${countyID}&in=state:${stateID}`;\n  const urlWithKey = url + `&key=${CENSUS_API_KEY}`;\n\n  /**\n   * Download and parse population statistics for U.S. Census API.\n   */\n  const getPopulation = () => {\n    return new Promise((resolve, reject) =>\n      fetch(urlWithKey)\n        .then((response) => response.json())\n        .then((json) => resolve(json[1][0]))\n        // Fallback: try accessing without API key (without API key, each user's IP address is only allowed 500 requests per day)\n        .catch((err) => {\n          console.error('Error fetching population using Census API key: ', err);\n          fetch(url)\n            .then((response) => response.json())\n            .then((json) => resolve(json[1][0]))\n            .catch((e) => {\n              console.error('Unable to fetch population from Census.gov: ', e);\n              reject(e);\n            });\n        })\n    );\n  };\n\n  const population = getPopulation().catch(() =>\n    setModalShow('Unable to grab population data from Census.gov, please try again later.')\n  );\n\n  return population;\n}\n\nexport default fetchPopulation;\n","import React, { useEffect, useState } from 'react';\nimport Welcome from './Welcome';\nimport Introduction from './Introduction';\nimport LocationForm from './LocationForm/LocationForm';\nimport Assessment from './Assessment/Assessment';\nimport Cases from './Cases';\nimport Loading from './Loading';\nimport Cafes from '../Images/Cafes.png';\nimport aggregate from '../aggregate';\nimport fetchPopulation from '../Population';\n\n/**\n * Main \"home\" page containing introduction, location form, loading transition, and final assessment.\n * @param {*} props Passed from App.js, necessary to provide pop-up modals with context.\n */\nconst MainPage = ({\n  county,\n  setCounty,\n  stateUSA,\n  setStateUSA,\n  fadeLocation,\n  setFadeLocation,\n  fadeLoading,\n  setFadeLoading,\n  data,\n  setData,\n  loading,\n  setLoading,\n  setModalShow,\n}) => {\n  const [population, setPopulation] = useState(false);\n\n  useEffect(() => {\n    async function doWork() {\n      // Aggregate Covid-19 data from John Hopkins\n      aggregate(county, stateUSA)\n        .catch((err) => {\n          console.error('Error aggregating data: ', err);\n          setModalShow(\n            'We were unable to find any data for this location.\\nPlease make sure you have entered the correct location and try again\\n(e.g. type \"Suffolk\" for Suffolk County).'\n          );\n        })\n        .then((response) => {\n          // Set received Covid-19 data\n          setData(response);\n\n          // Get fips location code\n          const { fips } = response[response.length - 1];\n          // Get population\n          fetchPopulation(fips, setModalShow)\n            .catch((e) => setModalShow('Unable to grab population data from Census.gov, please try again later.'))\n            .then((popResponse) => {\n              setPopulation(popResponse);\n              // Done with all downloading of data\n              setFadeLoading(true);\n              setTimeout(() => {\n                setFadeLoading(false);\n                setLoading(false);\n              }, 1 * 900);\n            });\n        });\n    }\n\n    if (county && stateUSA) {\n      setFadeLocation(true);\n      setTimeout(() => {\n        setFadeLocation(false);\n        setLoading(true);\n      }, 1 * 1000);\n      doWork();\n    }\n  }, [county, setData, setFadeLoading, setFadeLocation, setLoading, setModalShow, stateUSA]);\n\n  if (fadeLocation || !(county && stateUSA)) {\n    // Location Search\n    return (\n      <div>\n        <div className={fadeLocation ? 'App fade-out' : 'App'}>\n          <div className=\"center welcome-intro\">\n            <Welcome />\n            <LocationForm onCountyChange={setCounty} stateUSA={stateUSA} onStateChange={setStateUSA} />\n            <Introduction />\n            <img className=\"logo\" draggable=\"false\" src={Cafes} alt=\"Logo\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (county && stateUSA) {\n    // Loading spinner\n    if (loading) {\n      return <Loading fadeLoading={fadeLoading} />;\n    }\n    // Cases Page\n    return (\n      <div className={loading ? 'App' : 'App fade-in'}>\n        <Cases aggregation={data} location={[county, stateUSA]} />\n        <Assessment\n          population={population}\n          setLoading={setLoading}\n          setFadeLoading={setFadeLoading}\n          data={data}\n          county={county}\n          stateUSA={stateUSA}\n        />\n      </div>\n    );\n  }\n};\n\nexport default MainPage;\n","import React, { useState } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Stylesheets/App.css';\nimport './Stylesheets/Fade.css';\nimport LocationModal from './Components/Modal';\nimport Navbar from './Components/Navbar';\nimport Footer from './Components/Footer';\nimport Disclaimer from './Components/Disclaimer/Disclaimer';\nimport About from './Components/About/About';\nimport MainPage from './Components/MainPage';\n\n/**\n * Root of application.\n */\nfunction App() {\n  const [county, setCounty] = useState(null);\n  const [stateUSA, setStateUSA] = useState(null);\n  const [data, setData] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [fadeLocation, setFadeLocation] = useState(false);\n  const [fadeLoading, setFadeLoading] = useState(false);\n\n  return (\n    <div className=\"main-div\">\n      {/* Compatability with GH-pages */}\n      <HashRouter>\n        <Route path=\"/\">\n          <Navbar />\n        </Route>\n        <Switch>\n          <Route exact path=\"/\">\n            <LocationModal\n              show={[modalShow, setModalShow]}\n              onAccept={() =>\n                modalResolve(setCounty, setStateUSA, setData, setModalShow, setLoading, setFadeLocation, setFadeLoading)\n              }\n              onCancel={() =>\n                modalResolve(setCounty, setStateUSA, setData, setModalShow, setLoading, setFadeLocation, setFadeLoading)\n              }\n              title=\"Oops!\"\n              body={modalShow}\n            />\n            <MainPage\n              county={county}\n              setCounty={setCounty}\n              stateUSA={stateUSA}\n              setStateUSA={setStateUSA}\n              fadeLocation={fadeLocation}\n              setFadeLocation={setFadeLocation}\n              fadeLoading={fadeLoading}\n              setFadeLoading={setFadeLoading}\n              data={data}\n              setData={setData}\n              loading={loading}\n              setLoading={setLoading}\n              setModalShow={setModalShow}\n            />\n          </Route>\n          <Route path=\"/disclaimer\" component={Disclaimer} />\n          <Route path=\"/about\" component={About} />\n        </Switch>\n        <Route path=\"/\">\n          <Footer />\n        </Route>\n      </HashRouter>\n    </div>\n  );\n}\n\nfunction modalResolve(...setStates) {\n  setStates.forEach((set) => {\n    set(false);\n  });\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Reject Internet Explorer clients\nif (window.MSCompatibleInfo != null) {\n  const msg = 'Internet Explorer is not supported; please use a modern browser';\n  alert(msg);\n  throw new Error(msg);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/Cafes.1018aaef.png\";"],"sourceRoot":""}