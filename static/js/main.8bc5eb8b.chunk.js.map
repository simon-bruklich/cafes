{"version":3,"sources":["logo.svg","aggregate.js","Components/Assessment.jsx","Components/Cases.jsx","Components/LocationForm.jsx","App.js","index.js"],"names":["module","exports","aggregate","URL","relevant","parseData","data","county","state","i","length","cell","push","a","parsed","Promise","resolve","Papa","parse","download","worker","header","complete","results","computeAverage","dataSet","fips","population","baseLineSoFar","cases","newCasesSoFar","getPopulation","url","stateID","substring","countyID","urlWithKey","reject","fetch","then","response","json","catch","err","console","log","fetchPopulation","Assessment","props","useState","setPopulation","assessment","setAssessment","lastTwoWeeks","setLastTwoWeeks","useEffect","aggregation","pop","doWork","average","workingSet","unshift","Cases","parseInt","toLocaleString","location","LocationForm","onLocationChange","useInput","value","bindCounty","bind","handleSubmit","reset","useCallback","event","preventDefault","onSubmit","type","initialValue","setValue","onChange","target","App","setLocation","setData","navbar","Navbar","bg","variant","Brand","href","Nav","className","Link","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2JAAAA,EAAOC,QAAU,IAA0B,kC,sLCE5BC,E,8CAETC,EACJ,iFAEEC,EAAW,GAGf,SAASC,EAAUC,EAAMC,EAAQC,GAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IAAK,CACpC,IAAME,EAAOL,EAAKG,GACdE,EAAI,SAAeJ,GAAUI,EAAI,QAAcH,GACjDJ,EAASQ,KAAKD,I,4CAKpB,WAAyBJ,EAAQC,GAAjC,eAAAK,EAAA,6DACQC,EAAS,WACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OACjBC,IAAKC,MAAMf,EAAK,CACdgB,UAAU,EAGVC,QAAQ,EACRC,QAAQ,EACRC,SAAU,SAACC,GACTP,EAAQO,EAAQjB,aAV1B,SAgB6BQ,IAhB7B,cAiBET,EAjBF,OAiB0BE,EAAQC,GAjBlC,kBAkBSJ,GAlBT,4C,sBCTA,IAgDMoB,EAAiB,SAACC,EAASC,EAAMC,GAMrC,IALA,IAAIC,EAAgBH,EAAQ,GAAGI,MAC3BC,EAAgB,EAIXrB,EAAI,EAAGA,EAAIgB,EAAQf,OAAQD,IAClCqB,GAAiBL,EAAQhB,GAAGoB,MAAQD,EACpCA,EAAgBH,EAAQhB,GAAGoB,MAI7B,OADqBC,EAAgBL,EAAQf,OACtBiB,EAAc,K,SAIxBI,E,8EAAf,WAA6BL,GAA7B,uBAAAb,EAAA,6DAEMmB,EAAM,8DAEJC,EAAUP,EAAKQ,UAAU,EAAG,GAE5BC,EAAWT,EAAKQ,UAAU,EAAG,GACnCF,GAAG,qBAAkBG,EAAlB,qBAAuCF,GACpCG,EAAaJ,EAAG,eAxED,4CAyFfL,EAdkB,WACtB,OAAO,IAAIZ,SAAQ,SAACC,EAASqB,GAAV,OACjBC,MAAMF,GACHG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUzB,EAAQyB,EAAK,GAAG,OAE/BC,OACC,SAACC,GAAD,OAEE3B,EAAQ4B,QAAQC,IAAIF,UAKXG,GAzBrB,kBA2BSnB,GA3BT,4C,sBA8BeoB,MA5FI,SAACC,GAAW,IAAD,EACQC,mBAAS,MADjB,mBACrBtB,EADqB,KACTuB,EADS,OAEQD,mBAAS,cAFjB,mBAErBE,EAFqB,KAETC,EAFS,OAGYH,mBAAS,MAHrB,mBAGrBI,EAHqB,KAGPC,EAHO,KAK5BC,qBAAU,WAAM,4CAEd,gCAAA1C,EAAA,yDAEiC,kBAAtBmC,EAAMQ,aACgB,IAA7BR,EAAMQ,YAAY9C,QACjBiB,EAJL,uBAMUrB,EAAO0C,EAAMQ,YACb9B,EAAOpB,EAAKA,EAAKI,OAAS,GAAGgB,KAPvC,SAQsBK,EAAcL,GARpC,OAQU+B,EARV,OASIP,EAAcO,GATlB,4CAFc,0DAcdC,KACC,CAACV,EAAMQ,cAGVD,qBAAU,WACR,GAAIF,EAAc,CAChB,IAAM3B,EAAOpB,EAAKA,EAAKI,OAAS,GAAGgB,KAC7BiC,EAAUnC,EAAe6B,EAAc3B,EAAMC,GACnDyB,EAAcO,MAEf,CAACN,IAEJ,IAAM/C,EAAO0C,EAAMQ,YAEnB,GAAI7B,IAAe0B,EAAc,CAG/B,IADA,IAAMO,EAAa,GACVnD,EAAIH,EAAKI,OAAS,EAAGD,EAAIH,EAAKI,OAAS,GAAID,IAClDmD,EAAWC,QAAQvD,EAAKG,IAE1B6C,EAAgBM,GAGlB,OAAO,6BAAMT,ICjCAW,G,MAlBD,SAACd,GACb,IAAInB,EAEJ,GAAiC,kBAAtBmB,EAAMQ,aAAyD,IAA7BR,EAAMQ,YAAY9C,OAAc,CAC3E,IAAMJ,EAAO0C,EAAMQ,YACnB3B,EAAQvB,EAAKA,EAAKI,OAAS,GAAnB,MACRmB,EAAQkC,SAASlC,GAAOmC,iBAHmD,MAInD,CAAChB,EAAMiB,SAAS,GAAIjB,EAAMiB,SAAS,IAApD1D,EAJoE,KAI5DC,EAJ4D,KAK3E,OACE,4BACGqB,EADH,oBAC2BtB,EAD3B,KACqCC,GAIvC,OAAO,4CCdI,SAAS0D,EAAT,GAA6C,IAArBC,EAAoB,EAApBA,iBAAoB,EACOC,EAAS,IAA1D7D,EAD0C,EACjD8D,MAAqBC,EAD4B,EAClCC,KAGjBC,GAJmD,EAChBC,MAGpBC,uBACnB,SAACC,GACCA,EAAMC,iBACNT,EAAiB5D,KAEnB,CAAC4D,EAAkB5D,KAGrB,OACE,0BAAMsE,SAAUL,GACd,wCAEE,yCAAOM,KAAK,QAAWR,KAMzB,2BAAOQ,KAAK,SAAST,MAAM,YAKjC,IAAMD,EAAW,SAACW,GAAkB,IAAD,EACP9B,mBAAS8B,GADF,mBAC1BV,EAD0B,KACnBW,EADmB,KAGjC,MAAO,CACLX,QACAW,WACAP,MAAO,kBAAMO,EAAS,KACtBT,KAAM,CACJF,QACAY,SAAU,SAACN,GACTK,EAASL,EAAMO,OAAOb,W,4BCsBfc,MAnDf,WAAgB,IAAD,EACmBlC,mBAAS,MAD5B,mBACNgB,EADM,KACImB,EADJ,KAEP5E,EAAQ,gBAFD,EAGWyC,mBAAS,IAHpB,mBAGN3C,EAHM,KAGA+E,EAHA,KAIbzC,QAAQC,IAAI,MAAOoB,GAEnBV,qBAAU,WAAM,4CACd,4BAAA1C,EAAA,6DACE+B,QAAQC,IAAI,gBADd,SAEuB3C,EAAU+D,EAAUzD,GAF3C,OAEMgC,EAFN,OAGE6C,EAAQ7C,GAHV,4CADc,sBAOVyB,GAPW,WAAD,wBAQZP,KAED,CAACO,IAEJ,IAAMqB,EACJ,kBAACC,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,QAC3B,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,2BACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,SAAf,QACA,kBAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,eAAf,cACA,kBAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,UAAf,WAKN,OAAI1B,EAEA,yBAAK4B,UAAU,OACb,6BACGP,EACD,kBAAC,EAAD,CAAO9B,YAAalD,EAAM2D,SAAU,CAACA,EAAUzD,KAC/C,kBAAC,EAAD,CAAYgD,YAAalD,MAM7B,yBAAKuF,UAAU,OACb,6BACGP,EACD,kBAACpB,EAAD,CAAcC,iBAAkBiB,OClD1CW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8bc5eb8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Papa from \"papaparse\";\r\n\r\nexport default aggregate;\r\n\r\nconst URL =\r\n  \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\";\r\n\r\nlet relevant = [];\r\n\r\n// TODO: optimization: work backwards and take only last 2 weeks of data\r\nfunction parseData(data, county, state) {\r\n  for (let i = 0; i < data.length; i++) {\r\n    const cell = data[i];\r\n    if (cell[\"county\"] === county && cell[\"state\"] === state) {\r\n      relevant.push(cell);\r\n    }\r\n  }\r\n}\r\n\r\nasync function aggregate(county, state) {\r\n  const parsed = () => {\r\n    return new Promise((resolve) =>\r\n      Papa.parse(URL, {\r\n        download: true,\r\n        // TODO:\r\n        // error: errorModal(err);\r\n        worker: true,\r\n        header: true,\r\n        complete: (results) => {\r\n          resolve(results.data);\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const promisedData = await parsed();\r\n  parseData(promisedData, county, state);\r\n  return relevant;\r\n}\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n/*\r\n * Green = less than 4 cases per 100,000\r\n * Yellow = 4-8 cases per 100,000\r\n * Red = more than 8 cases per 100,000\r\n */\r\n\r\nconst CENSUS_API_KEY = \"4ea13d96102d350d26d2f58793cb843a11f667b2\";\r\n\r\nconst Assessment = (props) => {\r\n  const [population, setPopulation] = useState(null);\r\n  const [assessment, setAssessment] = useState(\"Loading...\");\r\n  const [lastTwoWeeks, setLastTwoWeeks] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Calculate population\r\n    async function doWork() {\r\n      if (\r\n        typeof props.aggregation === \"object\" &&\r\n        props.aggregation.length !== 0 &&\r\n        !population\r\n      ) {\r\n        const data = props.aggregation;\r\n        const fips = data[data.length - 1].fips;\r\n        const pop = await getPopulation(fips);\r\n        setPopulation(pop);\r\n      }\r\n    }\r\n    doWork();\r\n  }, [props.aggregation]);\r\n\r\n  // Calculate average\r\n  useEffect(() => {\r\n    if (lastTwoWeeks) {\r\n      const fips = data[data.length - 1].fips;\r\n      const average = computeAverage(lastTwoWeeks, fips, population);\r\n      setAssessment(average);\r\n    }\r\n  }, [lastTwoWeeks]);\r\n\r\n  const data = props.aggregation;\r\n  // Find last two weeks\r\n  if (population && !lastTwoWeeks) {\r\n    //lastTwoWeeks = data.splice([data.length - 15], [data.length - 1]);\r\n    const workingSet = [];\r\n    for (let i = data.length - 1; i > data.length - 15; i--) {\r\n      workingSet.unshift(data[i]);\r\n    }\r\n    setLastTwoWeeks(workingSet);\r\n  }\r\n\r\n  return <div>{assessment}</div>;\r\n};\r\n\r\n// Dataset must be presented in chronological order\r\nconst computeAverage = (dataSet, fips, population) => {\r\n  let baseLineSoFar = dataSet[0].cases;\r\n  let newCasesSoFar = 0;\r\n\r\n  // Skip the first data point;\r\n  // It is only used as a baseline for calculating new cases on next day\r\n  for (let i = 1; i < dataSet.length; i++) {\r\n    newCasesSoFar += dataSet[i].cases - baseLineSoFar;\r\n    baseLineSoFar = dataSet[i].cases;\r\n  }\r\n  // x = (cases / population) * 100,000\r\n  const averageCases = newCasesSoFar / dataSet.length;\r\n  return (averageCases / population) * 100000;\r\n};\r\n\r\n// String input\r\nasync function getPopulation(fips) {\r\n  //https://api.census.gov/data/2019/pep/charagegroups?get=NAME,POP&for=county:009&in=state:25\r\n  let url = \"https://api.census.gov/data/2019/pep/charagegroups?get=POP&\";\r\n  // First 2 digits are state ID\r\n  const stateID = fips.substring(0, 2);\r\n  // Last 4 digits are county ID\r\n  const countyID = fips.substring(2, 6);\r\n  url += `for=county:${countyID}&in=state:${stateID}`;\r\n  const urlWithKey = url + `&key=${CENSUS_API_KEY}`;\r\n  // TODO: (another .catch?)check response.status == 200, else error\r\n\r\n  const fetchPopulation = () => {\r\n    return new Promise((resolve, reject) =>\r\n      fetch(urlWithKey)\r\n        .then((response) => response.json())\r\n        .then((json) => resolve(json[1][0]))\r\n        // Fallback: try accessing without API key (each user's IP is only allowed 500 requests per day)\r\n        .catch(\r\n          (err) =>\r\n            // TODO: double .then as above and JSON parse\r\n            resolve(console.log(err))\r\n          //fetch(url).then((response) => parsePopulation(response.text()))\r\n        )\r\n    );\r\n  };\r\n  const population = fetchPopulation();\r\n\r\n  return population;\r\n}\r\n\r\nexport default Assessment;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Cases = (props) => {\r\n  let cases;\r\n\r\n  if (typeof props.aggregation === \"object\" && props.aggregation.length !== 0) {\r\n    const data = props.aggregation;\r\n    cases = data[data.length - 1][\"cases\"];\r\n    cases = parseInt(cases).toLocaleString();\r\n    const [county, state] = [props.location[0], props.location[1]];\r\n    return (\r\n      <h1>\r\n        {cases} active cases in {county}, {state}\r\n      </h1>\r\n    );\r\n  } else {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n};\r\n\r\nexport default Cases;\r\n","import React, { useState, useCallback } from \"react\";\r\n\r\n// Security Note: JSX is already sanitized, no need to re-sanitize input\r\nexport default function LocationForm({ onLocationChange }) {\r\n  const { value: county, bind: bindCounty, reset: resetCounty } = useInput(\"\");\r\n  // const { value: state, bind: bindState, reset: resetState } = useInput(\"\");\r\n\r\n  const handleSubmit = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      onLocationChange(county);\r\n    },\r\n    [onLocationChange, county]\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        County\r\n        <input type=\"text\" {...bindCounty} />\r\n      </label>\r\n      {/* <label>\r\n        State:\r\n        <input type=\"text\" {...bindState} />\r\n      </label> */}\r\n      <input type=\"submit\" value=\"Submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nconst useInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: (event) => {\r\n        setValue(event.target.value);\r\n      },\r\n    },\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport aggregate from \"./aggregate\";\r\nimport Assessment from \"./Components/Assessment\";\r\nimport \"./App.css\";\r\nimport Cases from \"./Components/Cases\";\r\nimport LocationForm from \"./Components/LocationForm\";\r\nimport { Navbar, Form, FormControl, Nav, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Stylesheets/app.css\";\r\n\r\nfunction App() {\r\n  const [location, setLocation] = useState(null);\r\n  const state = \"Massachusetts\";\r\n  const [data, setData] = useState([]);\r\n  console.log(\"loc\", location);\r\n\r\n  useEffect(() => {\r\n    async function doWork() {\r\n      console.log(\"LOADING DATA\");\r\n      let response = await aggregate(location, state);\r\n      setData(response);\r\n    }\r\n\r\n    if (location) {\r\n      doWork();\r\n    }\r\n  }, [location]);\r\n\r\n  const navbar = (\r\n    <Navbar bg=\"primary\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Covid-19 School Tracker</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n        <Nav.Link href=\"#disclaimer\">Disclaimer</Nav.Link>\r\n        <Nav.Link href=\"#about\">About</Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n\r\n  if (location) {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          {navbar}\r\n          <Cases aggregation={data} location={[location, state]}></Cases>\r\n          <Assessment aggregation={data}></Assessment>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          {navbar}\r\n          <LocationForm onLocationChange={setLocation}></LocationForm>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}